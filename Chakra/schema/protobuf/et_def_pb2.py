# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: et_def.proto
# Protobuf Python Version: 5.27.2
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    27,
    2,
    '',
    'et_def.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0c\x65t_def.proto\x12\x0e\x43hakraProtoMsg\"\x82\t\n\x0e\x41ttributeProto\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x12\n\ndoc_string\x18\x02 \x01(\t\x12\x14\n\ndouble_val\x18\x03 \x01(\x01H\x00\x12\x31\n\x0b\x64ouble_list\x18\x04 \x01(\x0b\x32\x1a.ChakraProtoMsg.DoubleListH\x00\x12\x13\n\tfloat_val\x18\x05 \x01(\x02H\x00\x12/\n\nfloat_list\x18\x06 \x01(\x0b\x32\x19.ChakraProtoMsg.FloatListH\x00\x12\x13\n\tint32_val\x18\x07 \x01(\x05H\x00\x12/\n\nint32_list\x18\x08 \x01(\x0b\x32\x19.ChakraProtoMsg.Int32ListH\x00\x12\x13\n\tint64_val\x18\t \x01(\x03H\x00\x12/\n\nint64_list\x18\n \x01(\x0b\x32\x19.ChakraProtoMsg.Int64ListH\x00\x12\x14\n\nuint32_val\x18\x0b \x01(\rH\x00\x12\x31\n\x0buint32_list\x18\x0c \x01(\x0b\x32\x1a.ChakraProtoMsg.Uint32ListH\x00\x12\x14\n\nuint64_val\x18\r \x01(\x04H\x00\x12\x31\n\x0buint64_list\x18\x0e \x01(\x0b\x32\x1a.ChakraProtoMsg.Uint64ListH\x00\x12\x14\n\nsint32_val\x18\x0f \x01(\x11H\x00\x12\x31\n\x0bsint32_list\x18\x10 \x01(\x0b\x32\x1a.ChakraProtoMsg.Sint32ListH\x00\x12\x14\n\nsint64_val\x18\x11 \x01(\x12H\x00\x12\x31\n\x0bsint64_list\x18\x12 \x01(\x0b\x32\x1a.ChakraProtoMsg.Sint64ListH\x00\x12\x15\n\x0b\x66ixed32_val\x18\x13 \x01(\x07H\x00\x12\x33\n\x0c\x66ixed32_list\x18\x14 \x01(\x0b\x32\x1b.ChakraProtoMsg.Fixed32ListH\x00\x12\x15\n\x0b\x66ixed64_val\x18\x15 \x01(\x06H\x00\x12\x33\n\x0c\x66ixed64_list\x18\x16 \x01(\x0b\x32\x1b.ChakraProtoMsg.Fixed64ListH\x00\x12\x16\n\x0csfixed32_val\x18\x17 \x01(\x0fH\x00\x12\x35\n\rsfixed32_list\x18\x18 \x01(\x0b\x32\x1c.ChakraProtoMsg.Sfixed32ListH\x00\x12\x16\n\x0csfixed64_val\x18\x19 \x01(\x10H\x00\x12\x35\n\rsfixed64_list\x18\x1a \x01(\x0b\x32\x1c.ChakraProtoMsg.Sfixed64ListH\x00\x12\x12\n\x08\x62ool_val\x18\x1b \x01(\x08H\x00\x12-\n\tbool_list\x18\x1c \x01(\x0b\x32\x18.ChakraProtoMsg.BoolListH\x00\x12\x14\n\nstring_val\x18\x1d \x01(\tH\x00\x12\x31\n\x0bstring_list\x18\x1e \x01(\x0b\x32\x1a.ChakraProtoMsg.StringListH\x00\x12\x13\n\tbytes_val\x18\x1f \x01(\x0cH\x00\x12/\n\nbytes_list\x18  \x01(\x0b\x32\x19.ChakraProtoMsg.BytesListH\x00\x42\x07\n\x05value\"\x1c\n\nDoubleList\x12\x0e\n\x06values\x18\x01 \x03(\x01\"\x1b\n\tFloatList\x12\x0e\n\x06values\x18\x01 \x03(\x02\"\x1b\n\tInt32List\x12\x0e\n\x06values\x18\x01 \x03(\x05\"\x1b\n\tInt64List\x12\x0e\n\x06values\x18\x01 \x03(\x03\"\x1c\n\nUint32List\x12\x0e\n\x06values\x18\x01 \x03(\r\"\x1c\n\nUint64List\x12\x0e\n\x06values\x18\x01 \x03(\x04\"\x1c\n\nSint32List\x12\x0e\n\x06values\x18\x01 \x03(\x11\"\x1c\n\nSint64List\x12\x0e\n\x06values\x18\x01 \x03(\x12\"\x1d\n\x0b\x46ixed32List\x12\x0e\n\x06values\x18\x01 \x03(\x07\"\x1d\n\x0b\x46ixed64List\x12\x0e\n\x06values\x18\x01 \x03(\x06\"\x1e\n\x0cSfixed32List\x12\x0e\n\x06values\x18\x01 \x03(\x0f\"\x1e\n\x0cSfixed64List\x12\x0e\n\x06values\x18\x01 \x03(\x10\"\x1a\n\x08\x42oolList\x12\x0e\n\x06values\x18\x01 \x03(\x08\"\x1c\n\nStringList\x12\x0e\n\x06values\x18\x01 \x03(\t\"\x1b\n\tBytesList\x12\x0e\n\x06values\x18\x01 \x03(\x0c\"O\n\x0eGlobalMetadata\x12\x0f\n\x07version\x18\x01 \x01(\t\x12,\n\x04\x61ttr\x18\x02 \x03(\x0b\x32\x1e.ChakraProtoMsg.AttributeProto\"\xa1\x02\n\x04Node\x12\n\n\x02id\x18\x01 \x01(\x04\x12\x0c\n\x04name\x18\x02 \x01(\t\x12&\n\x04type\x18\x03 \x01(\x0e\x32\x18.ChakraProtoMsg.NodeType\x12\x11\n\tctrl_deps\x18\x04 \x03(\x04\x12\x11\n\tdata_deps\x18\x05 \x03(\x04\x12\x19\n\x11start_time_micros\x18\x06 \x01(\x04\x12\x17\n\x0f\x64uration_micros\x18\x07 \x01(\x04\x12&\n\x06inputs\x18\x08 \x01(\x0b\x32\x16.ChakraProtoMsg.IOInfo\x12\'\n\x07outputs\x18\t \x01(\x0b\x32\x16.ChakraProtoMsg.IOInfo\x12,\n\x04\x61ttr\x18\n \x03(\x0b\x32\x1e.ChakraProtoMsg.AttributeProto\"7\n\x06IOInfo\x12\x0e\n\x06values\x18\x01 \x01(\t\x12\x0e\n\x06shapes\x18\x02 \x01(\t\x12\r\n\x05types\x18\x03 \x01(\t\"u\n\x06Tensor\x12\x11\n\ttensor_id\x18\x01 \x01(\x04\x12\x12\n\nstorage_id\x18\x02 \x01(\x04\x12\x0e\n\x06offset\x18\x03 \x01(\x04\x12\x10\n\x08num_elem\x18\x04 \x01(\x04\x12\x12\n\nelem_bytes\x18\x05 \x01(\x04\x12\x0e\n\x06\x64\x65vice\x18\x06 \x01(\t*\xa1\x01\n\x08NodeType\x12\x10\n\x0cINVALID_NODE\x10\x00\x12\x11\n\rMETADATA_NODE\x10\x01\x12\x11\n\rMEM_LOAD_NODE\x10\x02\x12\x12\n\x0eMEM_STORE_NODE\x10\x03\x12\r\n\tCOMP_NODE\x10\x04\x12\x12\n\x0e\x43OMM_SEND_NODE\x10\x05\x12\x12\n\x0e\x43OMM_RECV_NODE\x10\x06\x12\x12\n\x0e\x43OMM_COLL_NODE\x10\x07*\xb3\x01\n\x12\x43ollectiveCommType\x12\x0e\n\nALL_REDUCE\x10\x00\x12\n\n\x06REDUCE\x10\x01\x12\x0e\n\nALL_GATHER\x10\x02\x12\n\n\x06GATHER\x10\x03\x12\x0b\n\x07SCATTER\x10\x04\x12\r\n\tBROADCAST\x10\x05\x12\x0e\n\nALL_TO_ALL\x10\x06\x12\x12\n\x0eREDUCE_SCATTER\x10\x07\x12\x18\n\x14REDUCE_SCATTER_BLOCK\x10\x08\x12\x0b\n\x07\x42\x41RRIER\x10\tb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'et_def_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_NODETYPE']._serialized_start=2189
  _globals['_NODETYPE']._serialized_end=2350
  _globals['_COLLECTIVECOMMTYPE']._serialized_start=2353
  _globals['_COLLECTIVECOMMTYPE']._serialized_end=2532
  _globals['_ATTRIBUTEPROTO']._serialized_start=33
  _globals['_ATTRIBUTEPROTO']._serialized_end=1187
  _globals['_DOUBLELIST']._serialized_start=1189
  _globals['_DOUBLELIST']._serialized_end=1217
  _globals['_FLOATLIST']._serialized_start=1219
  _globals['_FLOATLIST']._serialized_end=1246
  _globals['_INT32LIST']._serialized_start=1248
  _globals['_INT32LIST']._serialized_end=1275
  _globals['_INT64LIST']._serialized_start=1277
  _globals['_INT64LIST']._serialized_end=1304
  _globals['_UINT32LIST']._serialized_start=1306
  _globals['_UINT32LIST']._serialized_end=1334
  _globals['_UINT64LIST']._serialized_start=1336
  _globals['_UINT64LIST']._serialized_end=1364
  _globals['_SINT32LIST']._serialized_start=1366
  _globals['_SINT32LIST']._serialized_end=1394
  _globals['_SINT64LIST']._serialized_start=1396
  _globals['_SINT64LIST']._serialized_end=1424
  _globals['_FIXED32LIST']._serialized_start=1426
  _globals['_FIXED32LIST']._serialized_end=1455
  _globals['_FIXED64LIST']._serialized_start=1457
  _globals['_FIXED64LIST']._serialized_end=1486
  _globals['_SFIXED32LIST']._serialized_start=1488
  _globals['_SFIXED32LIST']._serialized_end=1518
  _globals['_SFIXED64LIST']._serialized_start=1520
  _globals['_SFIXED64LIST']._serialized_end=1550
  _globals['_BOOLLIST']._serialized_start=1552
  _globals['_BOOLLIST']._serialized_end=1578
  _globals['_STRINGLIST']._serialized_start=1580
  _globals['_STRINGLIST']._serialized_end=1608
  _globals['_BYTESLIST']._serialized_start=1610
  _globals['_BYTESLIST']._serialized_end=1637
  _globals['_GLOBALMETADATA']._serialized_start=1639
  _globals['_GLOBALMETADATA']._serialized_end=1718
  _globals['_NODE']._serialized_start=1721
  _globals['_NODE']._serialized_end=2010
  _globals['_IOINFO']._serialized_start=2012
  _globals['_IOINFO']._serialized_end=2067
  _globals['_TENSOR']._serialized_start=2069
  _globals['_TENSOR']._serialized_end=2186
# @@protoc_insertion_point(module_scope)
